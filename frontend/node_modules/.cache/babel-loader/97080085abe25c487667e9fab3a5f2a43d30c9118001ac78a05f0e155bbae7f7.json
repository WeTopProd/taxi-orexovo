{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Dispatcher/DispatcherContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { QueryCars, QueryNewOrders, useQueryCars } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  newOrders: [],\n  isLoading: true,\n  carsList: [],\n  isLoadingCars: true\n};\nconst Context = /*#__PURE__*/createContext(initialValue);\nexport const DispatcherProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    data: newOrders = [],\n    isLoading = true\n  } = QueryNewOrders(2000);\n  const carsList = useQueryCars(1000);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      newOrders,\n      isLoading,\n      carsList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(DispatcherProvider, \"6LU5yUqtpTHMH37TMoZ/W0vSb0A=\", false, function () {\n  return [useQueryCars];\n});\n_c = DispatcherProvider;\nexport const useDispatcherContext = () => {\n  _s2();\n  const context = useContext(Context);\n  if (!context) {\n    throw Error('No Dispatcher context found.');\n  }\n  return context;\n};\n_s2(useDispatcherContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DispatcherProvider\");","map":{"version":3,"names":["React","createContext","useContext","QueryCars","QueryNewOrders","useQueryCars","jsxDEV","_jsxDEV","initialValue","newOrders","isLoading","carsList","isLoadingCars","Context","DispatcherProvider","_ref","_s","children","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDispatcherContext","_s2","context","Error","$RefreshReg$"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Dispatcher/DispatcherContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react'\nimport {QueryCars, QueryNewOrders, useQueryCars} from '../../services/api';\n\n\nconst initialValue = {\n  newOrders: [],\n  isLoading: true,\n  carsList: [],\n  isLoadingCars: true\n}\n\nconst Context = createContext(initialValue)\n\nexport const DispatcherProvider = ({ children }) => {\n\n  const {data: newOrders = [], isLoading = true} = QueryNewOrders (2000);\n\n  const carsList = useQueryCars (1000);\n\n\n  return (\n    <Context.Provider value={{ newOrders, isLoading, carsList }}>{children}</Context.Provider>\n  )\n}\n\nexport const useDispatcherContext = () => {\n  const context = useContext(Context)\n\n  if (!context) {\n    throw Error('No Dispatcher context found.')\n  }\n\n  return context\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAAQC,SAAS,EAAEC,cAAc,EAAEC,YAAY,QAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3E,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,IAAI;EACfC,QAAQ,EAAE,EAAE;EACZC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,OAAO,gBAAGZ,aAAa,CAACO,YAAY,CAAC;AAE3C,OAAO,MAAMM,kBAAkB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAE7C,MAAM;IAACG,IAAI,EAAET,SAAS,GAAG,EAAE;IAAEC,SAAS,GAAG;EAAI,CAAC,GAAGN,cAAc,CAAE,IAAI,CAAC;EAEtE,MAAMO,QAAQ,GAAGN,YAAY,CAAE,IAAI,CAAC;EAGpC,oBACEE,OAAA,CAACM,OAAO,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEX,SAAS;MAAEC,SAAS;MAAEC;IAAS,CAAE;IAAAM,QAAA,EAAEA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAmB,CAAC;AAE9F,CAAC;AAAAR,EAAA,CAVYF,kBAAkB;EAAA,QAIZT,YAAY;AAAA;AAAAoB,EAAA,GAJlBX,kBAAkB;AAY/B,OAAO,MAAMY,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACxC,MAAMC,OAAO,GAAG1B,UAAU,CAACW,OAAO,CAAC;EAEnC,IAAI,CAACe,OAAO,EAAE;IACZ,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC7C;EAEA,OAAOD,OAAO;AAChB,CAAC;AAAAD,GAAA,CARYD,oBAAoB;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}