{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Driver/Driver.js\",\n  _s = $RefreshSig$();\nimport styles from './Driver.module.scss';\nimport Header from '../../components/Header/Header';\nimport DriverStatus from './DriverStatus/DriverStatus';\nimport DriverPopup from './DriverPopup/DriverPopup';\nimport { useEffect } from 'react';\nimport changeMeta from '../../helpers/changeMeta';\nimport { DriverProvider, useDriverContext } from './DriverContext';\nimport { getDriverInfoByToken } from '../../services/userService';\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchOrdersByDriver } from '../../services/orderService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_TITLE = 'Водитель - \"БКФ Такси\"';\nconst PAGE_FAVICON = '/favicon_driver.ico';\nfunction DriverContainer() {\n  return /*#__PURE__*/_jsxDEV(DriverProvider, {\n    children: /*#__PURE__*/_jsxDEV(Driver, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = DriverContainer;\nfunction Driver() {\n  _s();\n  const {\n    driverOrders,\n    carId,\n    setCarId,\n    setCarNumber,\n    setDriverName,\n    setDriverPhone,\n    driverStatus,\n    setDriverStatus\n  } = useDriverContext();\n  useEffect(() => {\n    changeMeta(PAGE_TITLE, PAGE_FAVICON);\n    getDriverInfoByToken().then(res => {\n      setCarId(res.data.id);\n      setCarNumber(res.data.car_number);\n      setDriverName(res.data.first_name);\n      setDriverPhone(res.data.phone);\n      setDriverStatus(res.data.status);\n    }).catch(err => {\n      alert('Ошибка получения данных');\n      console.log(err);\n    });\n  });\n\n  // const timeRefreshOrders = driverStatus === 'свободен' ? 1000 : 0;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isAuth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(DriverStatus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), driverStatus === 'свободен' ? driverOrders.map((order, index) => {\n        return /*#__PURE__*/_jsxDEV(DriverPopup, {\n          address: order.address,\n          orderId: order.id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this);\n      }) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Driver, \"uAwEywwbPQ0aml09cGP5ER9zjAA=\", false, function () {\n  return [useDriverContext];\n});\n_c2 = Driver;\nexport default DriverContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"DriverContainer\");\n$RefreshReg$(_c2, \"Driver\");","map":{"version":3,"names":["styles","Header","DriverStatus","DriverPopup","useEffect","changeMeta","DriverProvider","useDriverContext","getDriverInfoByToken","useQuery","fetchOrdersByDriver","jsxDEV","_jsxDEV","PAGE_TITLE","PAGE_FAVICON","DriverContainer","children","Driver","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","driverOrders","carId","setCarId","setCarNumber","setDriverName","setDriverPhone","driverStatus","setDriverStatus","then","res","data","id","car_number","first_name","phone","status","catch","err","alert","console","log","className","container","isAuth","map","order","index","address","orderId","_c2","$RefreshReg$"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Driver/Driver.js"],"sourcesContent":["import styles from './Driver.module.scss';\nimport Header from '../../components/Header/Header';\nimport DriverStatus from './DriverStatus/DriverStatus';\nimport DriverPopup from './DriverPopup/DriverPopup';\nimport { useEffect } from 'react';\nimport changeMeta from '../../helpers/changeMeta';\nimport { DriverProvider, useDriverContext } from './DriverContext';\nimport { getDriverInfoByToken } from '../../services/userService';\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchOrdersByDriver } from '../../services/orderService';\n\nconst PAGE_TITLE = 'Водитель - \"БКФ Такси\"';\nconst PAGE_FAVICON = '/favicon_driver.ico';\n\nfunction DriverContainer() {\n  return (\n    <DriverProvider>\n      <Driver />\n    </DriverProvider>\n  );\n}\n\nfunction Driver() {\n  const {\n    driverOrders,\n    carId,\n    setCarId,\n    setCarNumber,\n    setDriverName,\n    setDriverPhone,\n    driverStatus,\n    setDriverStatus,\n  } = useDriverContext();\n\n  useEffect(() => {\n    changeMeta(PAGE_TITLE, PAGE_FAVICON);\n\n    getDriverInfoByToken()\n      .then((res) => {\n        setCarId(res.data.id);\n        setCarNumber(res.data.car_number);\n        setDriverName(res.data.first_name);\n        setDriverPhone(res.data.phone);\n        setDriverStatus(res.data.status);\n      })\n      .catch((err) => {\n        alert('Ошибка получения данных');\n        console.log(err);\n      });\n  });\n\n  // const timeRefreshOrders = driverStatus === 'свободен' ? 1000 : 0;\n\n  return (\n    <div className={styles.container}>\n      <Header isAuth={true} />\n      <main>\n        <DriverStatus />\n        {driverStatus === 'свободен'\n          ? driverOrders.map((order, index) => {\n              return (\n                <DriverPopup\n                  key={index}\n                  address={order.address}\n                  orderId={order.id}\n                />\n              );\n            })\n          : ''}\n      </main>\n    </div>\n  );\n}\n\nexport default DriverContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}