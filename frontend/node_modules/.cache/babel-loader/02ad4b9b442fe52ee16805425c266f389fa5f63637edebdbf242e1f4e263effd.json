{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useQuery } from '@tanstack/react-query';\nimport { $api, HOST } from './api';\nconst BASE_URL_DRIVERS = `/users/`;\nconst BASE_URL_TAKE_ORDER = `/take-order/`;\nconst BASE_URL_REFUSE_ORDER = `/refuse-order/`;\nconst BASE_URL_COMPLETE_ORDER = `/complete-order/`;\nconst BASE_URL_DRIVERS_W_HOST = `${HOST}/users/`;\nexport const submitAddCar = data => axios.post(BASE_URL_DRIVERS_W_HOST, data);\nconst filterUserByType = obj => obj.user_type === 'driver';\nexport const fetchCars = () => $api.get(BASE_URL_DRIVERS).then(response => response === null || response === void 0 ? void 0 : response.data.filter(filterUserByType));\nexport const QueryCars = time => {\n  _s();\n  return useQuery({\n    queryFn: () => fetchCars(),\n    queryKey: ['cars'],\n    refetchInterval: time,\n    retry: 5,\n    onError: error => {\n      alert(error);\n    }\n  });\n};\n_s(QueryCars, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n_c = QueryCars;\nexport const getUserInfoByToken = () => $api.get(`${BASE_URL_DRIVERS}me/`);\nexport const changeDriverDataQuery = (data, carId) => $api.patch(BASE_URL_DRIVERS + `${carId}/`, data);\nexport const takeOrderByDriver = orderId => $api.post(BASE_URL_TAKE_ORDER + `${orderId}/`);\nexport const refuseOrderByDriver = (orderId, comment) => $api.post(BASE_URL_REFUSE_ORDER + `${orderId}/`, {\n  comment: comment\n});\nexport const completeOrderByDriver = orderId => $api.post(BASE_URL_COMPLETE_ORDER + `${orderId}/`);\nvar _c;\n$RefreshReg$(_c, \"QueryCars\");","map":{"version":3,"names":["axios","useQuery","$api","HOST","BASE_URL_DRIVERS","BASE_URL_TAKE_ORDER","BASE_URL_REFUSE_ORDER","BASE_URL_COMPLETE_ORDER","BASE_URL_DRIVERS_W_HOST","submitAddCar","data","post","filterUserByType","obj","user_type","fetchCars","get","then","response","filter","QueryCars","time","_s","queryFn","queryKey","refetchInterval","retry","onError","error","alert","_c","getUserInfoByToken","changeDriverDataQuery","carId","patch","takeOrderByDriver","orderId","refuseOrderByDriver","comment","completeOrderByDriver","$RefreshReg$"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/services/userService.js"],"sourcesContent":["import axios from 'axios';\nimport { useQuery } from '@tanstack/react-query';\nimport { $api, HOST } from './api';\n\nconst BASE_URL_DRIVERS = `/users/`;\nconst BASE_URL_TAKE_ORDER = `/take-order/`;\nconst BASE_URL_REFUSE_ORDER = `/refuse-order/`;\nconst BASE_URL_COMPLETE_ORDER = `/complete-order/`;\nconst BASE_URL_DRIVERS_W_HOST = `${HOST}/users/`;\n\nexport const submitAddCar = (data) => axios.post(BASE_URL_DRIVERS_W_HOST, data);\n\nconst filterUserByType = (obj) => obj.user_type === 'driver';\n\nexport const fetchCars = () =>\n  $api\n    .get(BASE_URL_DRIVERS)\n    .then((response) => response?.data.filter(filterUserByType));\n\nexport const QueryCars = (time) =>\n  useQuery({\n    queryFn: () => fetchCars(),\n    queryKey: ['cars'],\n    refetchInterval: time,\n    retry: 5,\n    onError: (error) => {\n      alert(error);\n    },\n  });\n\nexport const getUserInfoByToken = () => $api.get(`${BASE_URL_DRIVERS}me/`);\nexport const changeDriverDataQuery = (data, carId) =>\n  $api.patch(BASE_URL_DRIVERS + `${carId}/`, data);\nexport const takeOrderByDriver = (orderId) =>\n  $api.post(BASE_URL_TAKE_ORDER + `${orderId}/`);\nexport const refuseOrderByDriver = (orderId, comment) =>\n  $api.post(BASE_URL_REFUSE_ORDER + `${orderId}/`, { comment: comment });\nexport const completeOrderByDriver = (orderId) =>\n  $api.post(BASE_URL_COMPLETE_ORDER + `${orderId}/`);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,IAAI,EAAEC,IAAI,QAAQ,OAAO;AAElC,MAAMC,gBAAgB,GAAI,SAAQ;AAClC,MAAMC,mBAAmB,GAAI,cAAa;AAC1C,MAAMC,qBAAqB,GAAI,gBAAe;AAC9C,MAAMC,uBAAuB,GAAI,kBAAiB;AAClD,MAAMC,uBAAuB,GAAI,GAAEL,IAAK,SAAQ;AAEhD,OAAO,MAAMM,YAAY,GAAIC,IAAI,IAAKV,KAAK,CAACW,IAAI,CAACH,uBAAuB,EAAEE,IAAI,CAAC;AAE/E,MAAME,gBAAgB,GAAIC,GAAG,IAAKA,GAAG,CAACC,SAAS,KAAK,QAAQ;AAE5D,OAAO,MAAMC,SAAS,GAAGA,CAAA,KACvBb,IAAI,CACDc,GAAG,CAACZ,gBAAgB,CAAC,CACrBa,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAER,IAAI,CAACS,MAAM,CAACP,gBAAgB,CAAC,CAAC;AAEhE,OAAO,MAAMQ,SAAS,GAAIC,IAAI;EAAAC,EAAA;EAAA,OAC5BrB,QAAQ,CAAC;IACPsB,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAAC,CAAC;IAC1BS,QAAQ,EAAE,CAAC,MAAM,CAAC;IAClBC,eAAe,EAAEJ,IAAI;IACrBK,KAAK,EAAE,CAAC;IACRC,OAAO,EAAGC,KAAK,IAAK;MAClBC,KAAK,CAACD,KAAK,CAAC;IACd;EACF,CAAC,CAAC;AAAA;AAACN,EAAA,CATQF,SAAS;EAAA,QACpBnB,QAAQ;AAAA;AAAA6B,EAAA,GADGV,SAAS;AAWtB,OAAO,MAAMW,kBAAkB,GAAGA,CAAA,KAAM7B,IAAI,CAACc,GAAG,CAAE,GAAEZ,gBAAiB,KAAI,CAAC;AAC1E,OAAO,MAAM4B,qBAAqB,GAAGA,CAACtB,IAAI,EAAEuB,KAAK,KAC/C/B,IAAI,CAACgC,KAAK,CAAC9B,gBAAgB,GAAI,GAAE6B,KAAM,GAAE,EAAEvB,IAAI,CAAC;AAClD,OAAO,MAAMyB,iBAAiB,GAAIC,OAAO,IACvClC,IAAI,CAACS,IAAI,CAACN,mBAAmB,GAAI,GAAE+B,OAAQ,GAAE,CAAC;AAChD,OAAO,MAAMC,mBAAmB,GAAGA,CAACD,OAAO,EAAEE,OAAO,KAClDpC,IAAI,CAACS,IAAI,CAACL,qBAAqB,GAAI,GAAE8B,OAAQ,GAAE,EAAE;EAAEE,OAAO,EAAEA;AAAQ,CAAC,CAAC;AACxE,OAAO,MAAMC,qBAAqB,GAAIH,OAAO,IAC3ClC,IAAI,CAACS,IAAI,CAACJ,uBAAuB,GAAI,GAAE6B,OAAQ,GAAE,CAAC;AAAC,IAAAN,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}