{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport { useQuery } from '@tanstack/react-query';\nimport { getToken } from './localStorageService';\nimport { routes } from './routes';\nconst HOST = 'http://127.0.0.1:8000/api';\nconst BASE_URL_ORDERS = `${HOST}/orders/`;\nconst BASE_URL_DRIVERS = `/users/`;\nconst BASE_URL_DRIVERS_W_HOST = `${HOST}/users/`;\nconst BASE_URL_DRIVER_INFO_BY_TOKEN = `/users/me/`;\nconst BASE_URL_DRIVER_LOGIN = `${HOST}/auth/token/login/`;\nconst BASE_URL_DRIVER_LOGOUT = `/auth/token/logout/`;\nexport const $api = axios.create({\n  baseURL: HOST\n});\n$api.interceptors.request.use(config => {\n  config.headers['authorization'] = `Token ${getToken()}`;\n  return config;\n});\n$api.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    alert('Нужно залогиниться. Вы сейчас будете перенаправлены на страницу авторизации');\n    window.location.assign(routes.login);\n  }\n  return Promise.reject(error);\n});\nexport async function fetchOrders() {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return await axios.get(BASE_URL_ORDERS, {\n    params: {\n      page: page\n    }\n  });\n}\nexport async function fetchNewOrders() {\n  let status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return await axios.get(BASE_URL_ORDERS, {\n    params: {\n      status: status\n    }\n  });\n}\nexport async function submitOrder(data) {\n  return await axios.post(BASE_URL_ORDERS, data);\n}\nexport const QueryNewOrders = time => {\n  _s();\n  return useQuery({\n    queryFn: () => fetchOrders().then(data => {\n      return data === null || data === void 0 ? void 0 : data.data.results;\n    }),\n    queryKey: [\"newOrders\"],\n    refetchInterval: time,\n    retry: 5,\n    onError: error => {\n      alert(error);\n    }\n  });\n};\n_s(QueryNewOrders, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n_c = QueryNewOrders;\nexport async function submitAddCar(data) {\n  return await axios.post(BASE_URL_DRIVERS_W_HOST, data);\n}\nexport async function fetchCars() {\n  return await axios.get(BASE_URL_DRIVERS_W_HOST);\n}\nexport const QueryCars = time => {\n  _s2();\n  return useQuery({\n    queryFn: () => fetchCars().then(response => {\n      return response === null || response === void 0 ? void 0 : response.data;\n    }),\n    queryKey: [\"cars\"],\n    refetchInterval: time,\n    retry: 5,\n    onError: error => {\n      alert(error);\n    }\n  });\n};\n_s2(QueryCars, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n_c2 = QueryCars;\nexport function getDriverInfoByToken() {\n  return $api.get(BASE_URL_DRIVER_INFO_BY_TOKEN);\n}\nexport function loginQuery(phone, password) {\n  return axios.post(BASE_URL_DRIVER_LOGIN, {\n    phone: phone,\n    password: password\n  });\n}\nexport function logoutQuery() {\n  return $api.post(BASE_URL_DRIVER_LOGOUT, {});\n}\nexport function changeDriverDataQuery(data, carId) {\n  return $api.patch(BASE_URL_DRIVERS + `${carId}/`, data);\n}\n\n// export const {data: orders = [], isLoading} = useQuery({\n//   queryFn: () => fetchOrders()\n//     .then((data) => {\n//       setPrevPage(data?.data.previous);\n//       setNextPage(data?.data.next);\n//       return data?.data.results\n//     }),\n//   queryKey: [\"orders\"],\n//   refetchInterval: 3000,\n//   retry: 5,\n//   onError: (error) => {alert(error)}\n// });\nvar _c, _c2;\n$RefreshReg$(_c, \"QueryNewOrders\");\n$RefreshReg$(_c2, \"QueryCars\");","map":{"version":3,"names":["axios","useQuery","getToken","routes","HOST","BASE_URL_ORDERS","BASE_URL_DRIVERS","BASE_URL_DRIVERS_W_HOST","BASE_URL_DRIVER_INFO_BY_TOKEN","BASE_URL_DRIVER_LOGIN","BASE_URL_DRIVER_LOGOUT","$api","create","baseURL","interceptors","request","use","config","headers","response","error","_error$response","status","alert","window","location","assign","login","Promise","reject","fetchOrders","page","arguments","length","undefined","get","params","fetchNewOrders","submitOrder","data","post","QueryNewOrders","time","_s","queryFn","then","results","queryKey","refetchInterval","retry","onError","_c","submitAddCar","fetchCars","QueryCars","_s2","_c2","getDriverInfoByToken","loginQuery","phone","password","logoutQuery","changeDriverDataQuery","carId","patch","$RefreshReg$"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport {useQuery} from '@tanstack/react-query';\nimport {getToken} from './localStorageService';\nimport {routes} from './routes';\n\nconst HOST = 'http://127.0.0.1:8000/api'\nconst BASE_URL_ORDERS = `${HOST}/orders/`;\nconst BASE_URL_DRIVERS = `/users/`;\nconst BASE_URL_DRIVERS_W_HOST = `${HOST}/users/`;\nconst BASE_URL_DRIVER_INFO_BY_TOKEN = `/users/me/`;\nconst BASE_URL_DRIVER_LOGIN = `${HOST}/auth/token/login/`;\nconst BASE_URL_DRIVER_LOGOUT = `/auth/token/logout/`;\n\n\nexport const $api = axios.create({\n  baseURL: HOST\n});\n\n$api.interceptors.request.use((config) => {\n  config.headers['authorization'] = `Token ${getToken()}`;\n  return config;\n});\n\n\n$api.interceptors.response.use(\n  function (response) {\n    return response;\n  },\n  function (error) {\n    if (error.response?.status === 401) {\n      alert('Нужно залогиниться. Вы сейчас будете перенаправлены на страницу авторизации');\n      window.location.assign(routes.login);\n    }\n    return Promise.reject(error);\n  }\n);\n\n\nexport async function fetchOrders (page = 1) {\n  return await axios.get(BASE_URL_ORDERS, {\n    params: {\n      page: page,\n    }\n  });\n}\n\nexport async function fetchNewOrders (status = '') {\n  return await axios.get(BASE_URL_ORDERS, {\n    params: {\n      status: status\n    }\n  });\n}\n\nexport async function submitOrder (data) {\n  return await axios.post(BASE_URL_ORDERS, data);\n}\n\nexport const QueryNewOrders = (time) => useQuery({\n  queryFn: () => fetchOrders()\n    .then((data) => {\n      return data?.data.results\n    }),\n  queryKey: [\"newOrders\"],\n  refetchInterval: time,\n  retry: 5,\n  onError: (error) => {alert(error)}\n});\n\n\nexport async function submitAddCar (data) {\n  return await axios.post(BASE_URL_DRIVERS_W_HOST, data);\n}\n\nexport async function fetchCars () {\n  return await axios.get(BASE_URL_DRIVERS_W_HOST);\n}\n\nexport const QueryCars = (time) => useQuery({\n  queryFn: () => fetchCars()\n    .then((response) => {\n      return response?.data\n    }),\n  queryKey: [\"cars\"],\n  refetchInterval: time,\n  retry: 5,\n  onError: (error) => {alert(error)}\n});\n\n\nexport function getDriverInfoByToken () {\n  return $api.get(BASE_URL_DRIVER_INFO_BY_TOKEN)\n}\n\nexport function loginQuery(phone, password) {\n  return axios.post(BASE_URL_DRIVER_LOGIN,\n    {\n      phone: phone,\n      password: password\n    }\n  )\n}\n\nexport function logoutQuery() {\n  return $api.post(\n    BASE_URL_DRIVER_LOGOUT,\n    {},\n  )\n}\n\nexport function changeDriverDataQuery(data, carId) {\n  return $api.patch(BASE_URL_DRIVERS + `${carId}/`, data)\n}\n\n\n\n\n\n\n\n\n\n\n\n// export const {data: orders = [], isLoading} = useQuery({\n//   queryFn: () => fetchOrders()\n//     .then((data) => {\n//       setPrevPage(data?.data.previous);\n//       setNextPage(data?.data.next);\n//       return data?.data.results\n//     }),\n//   queryKey: [\"orders\"],\n//   refetchInterval: 3000,\n//   retry: 5,\n//   onError: (error) => {alert(error)}\n// });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}