{"ast":null,"code":"import _slicedToArray from\"/Users/admin/Desktop/projects/wetop/taxi/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useContext,useEffect,useState}from'react';import{fetchOrdersByDriver}from'../../services/orderService';import{useQuery}from'@tanstack/react-query';import{getUserInfoByToken}from'../../services/userService';import{jsx as _jsx}from\"react/jsx-runtime\";var initialValue={driverOrders:[],isLoading:true,carsList:[],isLoadingCars:true};var Context=/*#__PURE__*/createContext(initialValue);export var DriverProvider=function DriverProvider(_ref){var children=_ref.children;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),carId=_useState2[0],setCarId=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),carNumber=_useState4[0],setCarNumber=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),driverName=_useState6[0],setDriverName=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),driverPhone=_useState8[0],setDriverPhone=_useState8[1];var _useState9=useState('занят'),_useState10=_slicedToArray(_useState9,2),driverStatus=_useState10[0],setDriverStatus=_useState10[1];var _useQuery=useQuery({queryFn:function queryFn(){return fetchOrdersByDriver(carId).then(function(res){return res.data.results;});},queryKey:[carId],refetchInterval:3000,retry:5,onError:function onError(error){console.error(error);}}),_useQuery$data=_useQuery.data,driverOrders=_useQuery$data===void 0?[]:_useQuery$data;useEffect(function(){getUserInfoByToken().then(function(res){setCarId(res.data.id);setCarNumber(res.data.car_number);setDriverName(res.data.first_name);setDriverPhone(res.data.phone);setDriverStatus(res.data.status);}).catch(function(err){alert('Ошибка получения данных');console.log(err);});},[]);return/*#__PURE__*/_jsx(Context.Provider,{value:{driverOrders:driverOrders,carId:carId,setCarId:setCarId,carNumber:carNumber,setCarNumber:setCarNumber,driverName:driverName,setDriverName:setDriverName,driverPhone:driverPhone,driverStatus:driverStatus,setDriverStatus:setDriverStatus},children:children});};export var useDriverContext=function useDriverContext(){var context=useContext(Context);if(!context){throw Error('No Driver context found.');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","fetchOrdersByDriver","useQuery","getUserInfoByToken","jsx","_jsx","initialValue","driverOrders","isLoading","carsList","isLoadingCars","Context","DriverProvider","_ref","children","_useState","_useState2","_slicedToArray","carId","setCarId","_useState3","_useState4","carNumber","setCarNumber","_useState5","_useState6","driverName","setDriverName","_useState7","_useState8","driverPhone","setDriverPhone","_useState9","_useState10","driverStatus","setDriverStatus","_useQuery","queryFn","then","res","data","results","queryKey","refetchInterval","retry","onError","error","console","_useQuery$data","id","car_number","first_name","phone","status","catch","err","alert","log","Provider","value","useDriverContext","context","Error"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Driver/DriverContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { fetchOrdersByDriver } from '../../services/orderService';\nimport { useQuery } from '@tanstack/react-query';\nimport { getUserInfoByToken } from '../../services/userService';\n\nconst initialValue = {\n  driverOrders: [],\n  isLoading: true,\n  carsList: [],\n  isLoadingCars: true,\n};\n\nconst Context = createContext(initialValue);\n\nexport const DriverProvider = ({ children }) => {\n  const [carId, setCarId] = useState('');\n  const [carNumber, setCarNumber] = useState('');\n  const [driverName, setDriverName] = useState('');\n  const [driverPhone, setDriverPhone] = useState('');\n  const [driverStatus, setDriverStatus] = useState('занят');\n\n  const { data: driverOrders = [] } = useQuery({\n    queryFn: () => fetchOrdersByDriver(carId).then((res) => res.data.results),\n    queryKey: [carId],\n    refetchInterval: 3000,\n    retry: 5,\n    onError: (error) => {\n      console.error(error);\n    },\n  });\n\n  useEffect(() => {\n    getUserInfoByToken()\n      .then((res) => {\n        setCarId(res.data.id);\n        setCarNumber(res.data.car_number);\n        setDriverName(res.data.first_name);\n        setDriverPhone(res.data.phone);\n        setDriverStatus(res.data.status);\n      })\n      .catch((err) => {\n        alert('Ошибка получения данных');\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Context.Provider\n      value={{\n        driverOrders,\n        carId,\n        setCarId,\n        carNumber,\n        setCarNumber,\n        driverName,\n        setDriverName,\n        driverPhone,\n        driverStatus,\n        setDriverStatus,\n      }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport const useDriverContext = () => {\n  const context = useContext(Context);\n\n  if (!context) {\n    throw Error('No Driver context found.');\n  }\n\n  return context;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}