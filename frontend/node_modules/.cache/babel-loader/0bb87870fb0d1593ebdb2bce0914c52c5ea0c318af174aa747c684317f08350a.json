{"ast":null,"code":"import axios from'axios';import{useQuery}from'@tanstack/react-query';import{$api,HOST}from'./api';var BASE_URL_DRIVERS=\"/users/\";var BASE_URL_TAKE_ORDER=\"/take-order/\";var BASE_URL_REFUSE_ORDER=\"/refuse-order/\";var BASE_URL_COMPLETE_ORDER=\"/complete-order/\";var BASE_URL_DRIVERS_W_HOST=\"\".concat(HOST,\"/users/\");export var submitAddCar=function submitAddCar(data){return axios.post(BASE_URL_DRIVERS_W_HOST,data);};var filterUserByType=function filterUserByType(obj){return obj.user_type==='driver';};export var fetchCars=function fetchCars(){return $api.get(BASE_URL_DRIVERS).then(function(response){return response===null||response===void 0?void 0:response.data.filter(filterUserByType);});};export var QueryCars=function QueryCars(time){return useQuery({queryFn:function queryFn(){return fetchCars();},queryKey:['cars'],refetchInterval:time,retry:5,onError:function onError(error){alert(error);}});};export var getUserInfoByToken=function getUserInfoByToken(){return $api.get(\"\".concat(BASE_URL_DRIVERS,\"me/\"));};export var changeDriverDataQuery=function changeDriverDataQuery(data,carId){return $api.patch(BASE_URL_DRIVERS+\"\".concat(carId,\"/\"),data);};export var takeOrderByDriver=function takeOrderByDriver(orderId){return $api.post(BASE_URL_TAKE_ORDER+\"\".concat(orderId,\"/\"));};export var refuseOrderByDriver=function refuseOrderByDriver(orderId,comment){return $api.post(BASE_URL_REFUSE_ORDER+\"\".concat(orderId,\"/\"),{comment:comment});};export var completeOrderByDriver=function completeOrderByDriver(orderId){return $api.post(BASE_URL_COMPLETE_ORDER+\"\".concat(orderId,\"/\"));};","map":{"version":3,"names":["axios","useQuery","$api","HOST","BASE_URL_DRIVERS","BASE_URL_TAKE_ORDER","BASE_URL_REFUSE_ORDER","BASE_URL_COMPLETE_ORDER","BASE_URL_DRIVERS_W_HOST","concat","submitAddCar","data","post","filterUserByType","obj","user_type","fetchCars","get","then","response","filter","QueryCars","time","queryFn","queryKey","refetchInterval","retry","onError","error","alert","getUserInfoByToken","changeDriverDataQuery","carId","patch","takeOrderByDriver","orderId","refuseOrderByDriver","comment","completeOrderByDriver"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/services/userService.js"],"sourcesContent":["import axios from 'axios';\nimport { useQuery } from '@tanstack/react-query';\nimport { $api, HOST } from './api';\n\nconst BASE_URL_DRIVERS = `/users/`;\nconst BASE_URL_TAKE_ORDER = `/take-order/`;\nconst BASE_URL_REFUSE_ORDER = `/refuse-order/`;\nconst BASE_URL_COMPLETE_ORDER = `/complete-order/`;\nconst BASE_URL_DRIVERS_W_HOST = `${HOST}/users/`;\n\nexport const submitAddCar = (data) => axios.post(BASE_URL_DRIVERS_W_HOST, data);\n\nconst filterUserByType = (obj) => obj.user_type === 'driver';\n\nexport const fetchCars = () =>\n  $api\n    .get(BASE_URL_DRIVERS)\n    .then((response) => response?.data.filter(filterUserByType));\n\nexport const QueryCars = (time) =>\n  useQuery({\n    queryFn: () => fetchCars(),\n    queryKey: ['cars'],\n    refetchInterval: time,\n    retry: 5,\n    onError: (error) => {\n      alert(error);\n    },\n  });\n\nexport const getUserInfoByToken = () => $api.get(`${BASE_URL_DRIVERS}me/`);\nexport const changeDriverDataQuery = (data, carId) =>\n  $api.patch(BASE_URL_DRIVERS + `${carId}/`, data);\nexport const takeOrderByDriver = (orderId) =>\n  $api.post(BASE_URL_TAKE_ORDER + `${orderId}/`);\nexport const refuseOrderByDriver = (orderId, comment) =>\n  $api.post(BASE_URL_REFUSE_ORDER + `${orderId}/`, { comment: comment });\nexport const completeOrderByDriver = (orderId) =>\n  $api.post(BASE_URL_COMPLETE_ORDER + `${orderId}/`);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,uBAAuB,CAChD,OAASC,IAAI,CAAEC,IAAI,KAAQ,OAAO,CAElC,GAAM,CAAAC,gBAAgB,UAAY,CAClC,GAAM,CAAAC,mBAAmB,eAAiB,CAC1C,GAAM,CAAAC,qBAAqB,iBAAmB,CAC9C,GAAM,CAAAC,uBAAuB,mBAAqB,CAClD,GAAM,CAAAC,uBAAuB,IAAAC,MAAA,CAAMN,IAAI,WAAS,CAEhD,MAAO,IAAM,CAAAO,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,IAAI,QAAK,CAAAX,KAAK,CAACY,IAAI,CAACJ,uBAAuB,CAAEG,IAAI,CAAC,GAE/E,GAAM,CAAAE,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIC,GAAG,QAAK,CAAAA,GAAG,CAACC,SAAS,GAAK,QAAQ,GAE5D,MAAO,IAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAA,QACpB,CAAAd,IAAI,CACDe,GAAG,CAACb,gBAAgB,CAAC,CACrBc,IAAI,CAAC,SAACC,QAAQ,QAAK,CAAAA,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAER,IAAI,CAACS,MAAM,CAACP,gBAAgB,CAAC,GAAC,GAEhE,MAAO,IAAM,CAAAQ,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,IAAI,QAC5B,CAAArB,QAAQ,CAAC,CACPsB,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAP,SAAS,CAAC,CAAC,GAC1BQ,QAAQ,CAAE,CAAC,MAAM,CAAC,CAClBC,eAAe,CAAEH,IAAI,CACrBI,KAAK,CAAE,CAAC,CACRC,OAAO,CAAE,SAAAA,QAACC,KAAK,CAAK,CAClBC,KAAK,CAACD,KAAK,CAAC,CACd,CACF,CAAC,CAAC,GAEJ,MAAO,IAAM,CAAAE,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,QAAS,CAAA5B,IAAI,CAACe,GAAG,IAAAR,MAAA,CAAIL,gBAAgB,OAAK,CAAC,GAC1E,MAAO,IAAM,CAAA2B,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAIpB,IAAI,CAAEqB,KAAK,QAC/C,CAAA9B,IAAI,CAAC+B,KAAK,CAAC7B,gBAAgB,IAAAK,MAAA,CAAMuB,KAAK,KAAG,CAAErB,IAAI,CAAC,GAClD,MAAO,IAAM,CAAAuB,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,OAAO,QACvC,CAAAjC,IAAI,CAACU,IAAI,CAACP,mBAAmB,IAAAI,MAAA,CAAM0B,OAAO,KAAG,CAAC,GAChD,MAAO,IAAM,CAAAC,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAID,OAAO,CAAEE,OAAO,QAClD,CAAAnC,IAAI,CAACU,IAAI,CAACN,qBAAqB,IAAAG,MAAA,CAAM0B,OAAO,KAAG,CAAE,CAAEE,OAAO,CAAEA,OAAQ,CAAC,CAAC,GACxE,MAAO,IAAM,CAAAC,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAIH,OAAO,QAC3C,CAAAjC,IAAI,CAACU,IAAI,CAACL,uBAAuB,IAAAE,MAAA,CAAM0B,OAAO,KAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}