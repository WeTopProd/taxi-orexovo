{"ast":null,"code":"import React,{createContext,useContext}from'react';import{fetchOrdersByPage}from'../../services/orderService';import{QueryCars}from'../../services/userService';import{useQuery}from'@tanstack/react-query';import{jsx as _jsx}from\"react/jsx-runtime\";var initialValue={ordersAll:[],isLoading:true,carsList:[],isLoadingCars:true};var Context=/*#__PURE__*/createContext(initialValue);export var DispatcherProvider=function DispatcherProvider(_ref){var children=_ref.children;var QueryOrdersByPage=function QueryOrdersByPage(time){return useQuery({queryFn:function queryFn(){return fetchOrdersByPage().then(function(res){var _res$data;return(_res$data=res.data)===null||_res$data===void 0?void 0:_res$data.results;});},queryKey:['ordersDispatcher1'],refetchInterval:time,retry:5,onError:function onError(error){console.error(error);}});};var _QueryOrdersByPage=QueryOrdersByPage(3000),_QueryOrdersByPage$da=_QueryOrdersByPage.data,ordersAll=_QueryOrdersByPage$da===void 0?[]:_QueryOrdersByPage$da,_QueryOrdersByPage$is=_QueryOrdersByPage.isLoading,isLoadingOrders=_QueryOrdersByPage$is===void 0?true:_QueryOrdersByPage$is;var _QueryCars=QueryCars(3000),_QueryCars$data=_QueryCars.data,carsList=_QueryCars$data===void 0?[]:_QueryCars$data,_QueryCars$isLoading=_QueryCars.isLoading,isLoadingCars=_QueryCars$isLoading===void 0?true:_QueryCars$isLoading;return/*#__PURE__*/_jsx(Context.Provider,{value:{ordersAll:ordersAll,isLoadingOrders:isLoadingOrders,carsList:carsList,isLoadingCars:isLoadingCars},children:children});};export var useDispatcherContext=function useDispatcherContext(){var context=useContext(Context);if(!context){throw Error('No Dispatcher context found.');}return context;};","map":{"version":3,"names":["React","createContext","useContext","fetchOrdersByPage","QueryCars","useQuery","jsx","_jsx","initialValue","ordersAll","isLoading","carsList","isLoadingCars","Context","DispatcherProvider","_ref","children","QueryOrdersByPage","time","queryFn","then","res","_res$data","data","results","queryKey","refetchInterval","retry","onError","error","console","_QueryOrdersByPage","_QueryOrdersByPage$da","_QueryOrdersByPage$is","isLoadingOrders","_QueryCars","_QueryCars$data","_QueryCars$isLoading","Provider","value","useDispatcherContext","context","Error"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Dispatcher/DispatcherContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport { fetchOrdersByPage } from '../../services/orderService';\nimport { QueryCars } from '../../services/userService';\nimport { useQuery } from '@tanstack/react-query';\n\nconst initialValue = {\n  ordersAll: [],\n  isLoading: true,\n  carsList: [],\n  isLoadingCars: true,\n};\n\nconst Context = createContext(initialValue);\n\nexport const DispatcherProvider = ({ children }) => {\n  const QueryOrdersByPage = (time) =>\n    useQuery({\n      queryFn: () => fetchOrdersByPage().then((res) => res.data?.results),\n      queryKey: ['ordersDispatcher1'],\n      refetchInterval: time,\n      retry: 5,\n      onError: (error) => {\n        console.error(error);\n      },\n    });\n\n  const { data: ordersAll = [], isLoading: isLoadingOrders = true } =\n    QueryOrdersByPage(3000);\n\n  const { data: carsList = [], isLoading: isLoadingCars = true } =\n    QueryCars(3000);\n\n  return (\n    <Context.Provider\n      value={{\n        ordersAll: ordersAll,\n        isLoadingOrders,\n        carsList,\n        isLoadingCars,\n      }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport const useDispatcherContext = () => {\n  const context = useContext(Context);\n\n  if (!context) {\n    throw Error('No Dispatcher context found.');\n  }\n\n  return context;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,KAAQ,OAAO,CACxD,OAASC,iBAAiB,KAAQ,6BAA6B,CAC/D,OAASC,SAAS,KAAQ,4BAA4B,CACtD,OAASC,QAAQ,KAAQ,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,GAAM,CAAAC,YAAY,CAAG,CACnBC,SAAS,CAAE,EAAE,CACbC,SAAS,CAAE,IAAI,CACfC,QAAQ,CAAE,EAAE,CACZC,aAAa,CAAE,IACjB,CAAC,CAED,GAAM,CAAAC,OAAO,cAAGZ,aAAa,CAACO,YAAY,CAAC,CAE3C,MAAO,IAAM,CAAAM,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAAC,IAAA,CAAqB,IAAf,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAC3C,GAAM,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,IAAI,QAC7B,CAAAb,QAAQ,CAAC,CACPc,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAhB,iBAAiB,CAAC,CAAC,CAACiB,IAAI,CAAC,SAACC,GAAG,MAAAC,SAAA,QAAAA,SAAA,CAAKD,GAAG,CAACE,IAAI,UAAAD,SAAA,iBAARA,SAAA,CAAUE,OAAO,GAAC,GACnEC,QAAQ,CAAE,CAAC,mBAAmB,CAAC,CAC/BC,eAAe,CAAER,IAAI,CACrBS,KAAK,CAAE,CAAC,CACRC,OAAO,CAAE,SAAAA,QAACC,KAAK,CAAK,CAClBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACtB,CACF,CAAC,CAAC,GAEJ,IAAAE,kBAAA,CACEd,iBAAiB,CAAC,IAAI,CAAC,CAAAe,qBAAA,CAAAD,kBAAA,CADjBR,IAAI,CAAEd,SAAS,CAAAuB,qBAAA,UAAG,EAAE,CAAAA,qBAAA,CAAAC,qBAAA,CAAAF,kBAAA,CAAErB,SAAS,CAAEwB,eAAe,CAAAD,qBAAA,UAAG,IAAI,CAAAA,qBAAA,CAG/D,IAAAE,UAAA,CACE/B,SAAS,CAAC,IAAI,CAAC,CAAAgC,eAAA,CAAAD,UAAA,CADTZ,IAAI,CAAEZ,QAAQ,CAAAyB,eAAA,UAAG,EAAE,CAAAA,eAAA,CAAAC,oBAAA,CAAAF,UAAA,CAAEzB,SAAS,CAAEE,aAAa,CAAAyB,oBAAA,UAAG,IAAI,CAAAA,oBAAA,CAG5D,mBACE9B,IAAA,CAACM,OAAO,CAACyB,QAAQ,EACfC,KAAK,CAAE,CACL9B,SAAS,CAAEA,SAAS,CACpByB,eAAe,CAAfA,eAAe,CACfvB,QAAQ,CAARA,QAAQ,CACRC,aAAa,CAAbA,aACF,CAAE,CAAAI,QAAA,CACDA,QAAQ,CACO,CAAC,CAEvB,CAAC,CAED,MAAO,IAAM,CAAAwB,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAA,CAAS,CACxC,GAAM,CAAAC,OAAO,CAAGvC,UAAU,CAACW,OAAO,CAAC,CAEnC,GAAI,CAAC4B,OAAO,CAAE,CACZ,KAAM,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CAC7C,CAEA,MAAO,CAAAD,OAAO,CAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}