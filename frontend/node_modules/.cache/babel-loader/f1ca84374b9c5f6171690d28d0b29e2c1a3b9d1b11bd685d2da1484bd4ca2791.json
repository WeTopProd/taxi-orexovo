{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Driver/DriverContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { fetchOrdersByDriver } from '../../services/orderService';\nimport { useQuery } from '@tanstack/react-query';\nimport { getUserInfoByToken } from '../../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  driverOrders: [],\n  isLoading: true,\n  carsList: [],\n  isLoadingCars: true\n};\nconst Context = /*#__PURE__*/createContext(initialValue);\nexport const DriverProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [carId, setCarId] = useState('');\n  const [carNumber, setCarNumber] = useState('');\n  const [driverName, setDriverName] = useState('');\n  const [driverPhone, setDriverPhone] = useState('');\n  const [driverStatus, setDriverStatus] = useState('busy');\n  const {\n    data: driverOrders = []\n  } = useQuery({\n    queryFn: () => fetchOrdersByDriver(carId).then(res => res.data.results),\n    queryKey: [carId],\n    refetchInterval: 5000,\n    retry: 5,\n    onError: error => {\n      console.error(error);\n    }\n  });\n  useEffect(() => {\n    getUserInfoByToken().then(res => {\n      setCarId(res.data.id);\n      setCarNumber(res.data.car_number);\n      setDriverName(res.data.first_name);\n      setDriverPhone(res.data.phone);\n      setDriverStatus(res.data.status);\n    }).catch(err => {\n      alert('Ошибка получения данных');\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      driverOrders,\n      carId,\n      setCarId,\n      carNumber,\n      setCarNumber,\n      driverName,\n      setDriverName,\n      driverPhone,\n      driverStatus,\n      setDriverStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(DriverProvider, \"jJTM2Px+TT9Xi9T8nsdlEoyWyrs=\", false, function () {\n  return [useQuery];\n});\n_c = DriverProvider;\nexport const useDriverContext = () => {\n  _s2();\n  const context = useContext(Context);\n  if (!context) {\n    throw Error('No Driver context found.');\n  }\n  return context;\n};\n_s2(useDriverContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DriverProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","fetchOrdersByDriver","useQuery","getUserInfoByToken","jsxDEV","_jsxDEV","initialValue","driverOrders","isLoading","carsList","isLoadingCars","Context","DriverProvider","_ref","_s","children","carId","setCarId","carNumber","setCarNumber","driverName","setDriverName","driverPhone","setDriverPhone","driverStatus","setDriverStatus","data","queryFn","then","res","results","queryKey","refetchInterval","retry","onError","error","console","id","car_number","first_name","phone","status","catch","err","alert","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDriverContext","_s2","context","Error","$RefreshReg$"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Driver/DriverContext.js"],"sourcesContent":["import React, {createContext, useContext, useEffect, useState} from 'react';\nimport {fetchOrdersByDriver} from '../../services/orderService';\nimport {useQuery} from '@tanstack/react-query';\nimport {getUserInfoByToken} from '../../services/userService';\n\nconst initialValue = {\n  driverOrders: [],\n  isLoading: true,\n  carsList: [],\n  isLoadingCars: true,\n};\n\nconst Context = createContext(initialValue);\n\nexport const DriverProvider = ({ children }) => {\n  const [carId, setCarId] = useState('');\n  const [carNumber, setCarNumber] = useState('');\n  const [driverName, setDriverName] = useState('');\n  const [driverPhone, setDriverPhone] = useState('');\n  const [driverStatus, setDriverStatus] = useState('busy');\n\n  const { data: driverOrders = [] } = useQuery({\n    queryFn: () => fetchOrdersByDriver(carId).then((res) => res.data.results),\n    queryKey: [carId],\n    refetchInterval: 5000,\n    retry: 5,\n    onError: (error) => {\n      console.error(error);\n    },\n  });\n\n  useEffect(() => {\n    getUserInfoByToken()\n      .then((res) => {\n        setCarId(res.data.id);\n        setCarNumber(res.data.car_number);\n        setDriverName(res.data.first_name);\n        setDriverPhone(res.data.phone);\n        setDriverStatus(res.data.status);\n      })\n      .catch((err) => {\n        alert('Ошибка получения данных');\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Context.Provider\n      value={{\n        driverOrders,\n        carId,\n        setCarId,\n        carNumber,\n        setCarNumber,\n        driverName,\n        setDriverName,\n        driverPhone,\n        driverStatus,\n        setDriverStatus,\n      }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport const useDriverContext = () => {\n  const context = useContext(Context);\n\n  if (!context) {\n    throw Error('No Driver context found.');\n  }\n\n  return context;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}