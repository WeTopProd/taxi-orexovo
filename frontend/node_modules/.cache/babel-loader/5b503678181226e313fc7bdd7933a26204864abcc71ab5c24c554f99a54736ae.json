{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Barmen/OrdersList/OrdersList.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { fetchOrders } from '../../../services/orderService';\nimport Order from '../Order/Order';\nimport { useQuery } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersList = () => {\n  _s();\n  const {\n    data: orders = []\n  } = useQuery({\n    queryFn: () => fetchOrders(1),\n    queryKey: ['orders'],\n    refetchInterval: 3000,\n    retry: 5,\n    onError: error => {\n      alert('Не удалось загрузить список заказов');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [orders.map((order, index) => {\n      /*#__PURE__*/_jsxDEV(Order, {\n        order: order\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    }), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdersList, \"0GQMBh29ehQdEVVpGSgNYvSDFXA=\", false, function () {\n  return [useQuery];\n});\n_c = OrdersList;\nexport default OrdersList;\nvar _c;\n$RefreshReg$(_c, \"OrdersList\");","map":{"version":3,"names":["React","fetchOrders","Order","useQuery","jsxDEV","_jsxDEV","OrdersList","_s","data","orders","queryFn","queryKey","refetchInterval","retry","onError","error","alert","children","map","order","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Barmen/OrdersList/OrdersList.jsx"],"sourcesContent":["import React from 'react';\nimport { fetchOrders } from '../../../services/orderService';\nimport Order from '../Order/Order';\nimport { useQuery } from '@tanstack/react-query';\n\nconst OrdersList = () => {\n  const { data: orders = [] } = useQuery({\n    queryFn: () => fetchOrders(1),\n    queryKey: ['orders'],\n    refetchInterval: 3000,\n    retry: 5,\n    onError: (error) => {\n      alert('Не удалось загрузить список заказов');\n    },\n  });\n\n  return (\n    <div>\n      {orders.map((order, index) => {\n        <Order order={order} />;\n      })}\n      )\n    </div>\n  );\n};\n\nexport default OrdersList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,IAAI,EAAEC,MAAM,GAAG;EAAG,CAAC,GAAGN,QAAQ,CAAC;IACrCO,OAAO,EAAEA,CAAA,KAAMT,WAAW,CAAC,CAAC,CAAC;IAC7BU,QAAQ,EAAE,CAAC,QAAQ,CAAC;IACpBC,eAAe,EAAE,IAAI;IACrBC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAGC,KAAK,IAAK;MAClBC,KAAK,CAAC,qCAAqC,CAAC;IAC9C;EACF,CAAC,CAAC;EAEF,oBACEX,OAAA;IAAAY,QAAA,GACGR,MAAM,CAACS,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MAC5B,aAAAf,OAAA,CAACH,KAAK;QAACiB,KAAK,EAAEA;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACzB,CAAC,CAAC,EAAC,GAEL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnBID,UAAU;EAAA,QACgBH,QAAQ;AAAA;AAAAsB,EAAA,GADlCnB,UAAU;AAqBhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}