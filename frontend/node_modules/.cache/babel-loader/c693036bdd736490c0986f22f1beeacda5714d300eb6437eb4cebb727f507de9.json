{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport { useQuery } from '@tanstack/react-query';\nconst BASE_URL_ORDERS = 'http://127.0.0.1:8000/api/orders/';\nconst BASE_URL_CARS = 'http://127.0.0.1:8000/api/users/';\nexport async function fetchOrders() {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return await axios.get(BASE_URL_ORDERS, {\n    params: {\n      page: page\n    }\n  });\n}\nexport async function submitOrder(data) {\n  return await axios.post(BASE_URL_ORDERS, data);\n}\nexport const QueryNewOrders = time => {\n  _s();\n  return useQuery({\n    queryFn: () => fetchOrders().then(data => {\n      return data === null || data === void 0 ? void 0 : data.data.results;\n    }),\n    queryKey: [\"newOrders\"],\n    refetchInterval: time,\n    retry: 5,\n    onError: error => {\n      alert(error);\n    }\n  });\n};\n_s(QueryNewOrders, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n_c = QueryNewOrders;\nexport async function submitAddCar(data) {\n  return await axios.post(BASE_URL_CARS, data);\n}\nexport async function fetchCars() {\n  return await axios.get(BASE_URL_CARS);\n}\nexport function useQueryCars(time) {\n  _s2();\n  useQuery({\n    queryFn: () => fetchCars().then(data => {\n      console.log(data);\n      return data === null || data === void 0 ? void 0 : data.data;\n    }),\n    queryKey: [\"cars\"],\n    refetchInterval: time,\n    retry: 5,\n    onError: error => {\n      alert(error);\n    }\n  });\n}\n_s2(useQueryCars, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n;\n\n// export const {data: orders = [], isLoading} = useQuery({\n//   queryFn: () => fetchOrders()\n//     .then((data) => {\n//       setPrevPage(data?.data.previous);\n//       setNextPage(data?.data.next);\n//       return data?.data.results\n//     }),\n//   queryKey: [\"orders\"],\n//   refetchInterval: 3000,\n//   retry: 5,\n//   onError: (error) => {alert(error)}\n// });\nvar _c;\n$RefreshReg$(_c, \"QueryNewOrders\");","map":{"version":3,"names":["axios","useQuery","BASE_URL_ORDERS","BASE_URL_CARS","fetchOrders","page","arguments","length","undefined","get","params","submitOrder","data","post","QueryNewOrders","time","_s","queryFn","then","results","queryKey","refetchInterval","retry","onError","error","alert","_c","submitAddCar","fetchCars","useQueryCars","_s2","console","log","$RefreshReg$"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport {useQuery} from '@tanstack/react-query';\n\nconst BASE_URL_ORDERS = 'http://127.0.0.1:8000/api/orders/';\nconst BASE_URL_CARS = 'http://127.0.0.1:8000/api/users/';\n\nexport async function fetchOrders (page = 1) {\n  return await axios.get(BASE_URL_ORDERS, {\n    params: {\n      page: page,\n    }\n  });\n}\n\nexport async function submitOrder (data) {\n  return await axios.post(BASE_URL_ORDERS, data);\n}\n\nexport const QueryNewOrders = (time) => useQuery({\n  queryFn: () => fetchOrders()\n    .then((data) => {\n      return data?.data.results\n    }),\n  queryKey: [\"newOrders\"],\n  refetchInterval: time,\n  retry: 5,\n  onError: (error) => {alert(error)}\n});\n\n\nexport async function submitAddCar (data) {\n  return await axios.post(BASE_URL_CARS, data);\n}\n\nexport async function fetchCars () {\n  return await axios.get(BASE_URL_CARS);\n}\n\nexport function useQueryCars(time) {\n  useQuery({\n  queryFn: () => fetchCars()\n    .then((data) => {\n      console.log(data);\n      return data?.data\n    }),\n  queryKey: [\"cars\"],\n  refetchInterval: time,\n  retry: 5,\n  onError: (error) => {alert(error)}\n})};\n\n\n// export const {data: orders = [], isLoading} = useQuery({\n//   queryFn: () => fetchOrders()\n//     .then((data) => {\n//       setPrevPage(data?.data.previous);\n//       setNextPage(data?.data.next);\n//       return data?.data.results\n//     }),\n//   queryKey: [\"orders\"],\n//   refetchInterval: 3000,\n//   retry: 5,\n//   onError: (error) => {alert(error)}\n// });\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,uBAAuB;AAE9C,MAAMC,eAAe,GAAG,mCAAmC;AAC3D,MAAMC,aAAa,GAAG,kCAAkC;AAExD,OAAO,eAAeC,WAAWA,CAAA,EAAY;EAAA,IAAVC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACzC,OAAO,MAAMN,KAAK,CAACS,GAAG,CAACP,eAAe,EAAE;IACtCQ,MAAM,EAAE;MACNL,IAAI,EAAEA;IACR;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeM,WAAWA,CAAEC,IAAI,EAAE;EACvC,OAAO,MAAMZ,KAAK,CAACa,IAAI,CAACX,eAAe,EAAEU,IAAI,CAAC;AAChD;AAEA,OAAO,MAAME,cAAc,GAAIC,IAAI;EAAAC,EAAA;EAAA,OAAKf,QAAQ,CAAC;IAC/CgB,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAAC,CAAC,CACzBc,IAAI,CAAEN,IAAI,IAAK;MACd,OAAOA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI,CAACO,OAAO;IAC3B,CAAC,CAAC;IACJC,QAAQ,EAAE,CAAC,WAAW,CAAC;IACvBC,eAAe,EAAEN,IAAI;IACrBO,KAAK,EAAE,CAAC;IACRC,OAAO,EAAGC,KAAK,IAAK;MAACC,KAAK,CAACD,KAAK,CAAC;IAAA;EACnC,CAAC,CAAC;AAAA;AAACR,EAAA,CATUF,cAAc;EAAA,QAAab,QAAQ;AAAA;AAAAyB,EAAA,GAAnCZ,cAAc;AAY3B,OAAO,eAAea,YAAYA,CAAEf,IAAI,EAAE;EACxC,OAAO,MAAMZ,KAAK,CAACa,IAAI,CAACV,aAAa,EAAES,IAAI,CAAC;AAC9C;AAEA,OAAO,eAAegB,SAASA,CAAA,EAAI;EACjC,OAAO,MAAM5B,KAAK,CAACS,GAAG,CAACN,aAAa,CAAC;AACvC;AAEA,OAAO,SAAS0B,YAAYA,CAACd,IAAI,EAAE;EAAAe,GAAA;EACjC7B,QAAQ,CAAC;IACTgB,OAAO,EAAEA,CAAA,KAAMW,SAAS,CAAC,CAAC,CACvBV,IAAI,CAAEN,IAAI,IAAK;MACdmB,OAAO,CAACC,GAAG,CAACpB,IAAI,CAAC;MACjB,OAAOA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI;IACnB,CAAC,CAAC;IACJQ,QAAQ,EAAE,CAAC,MAAM,CAAC;IAClBC,eAAe,EAAEN,IAAI;IACrBO,KAAK,EAAE,CAAC;IACRC,OAAO,EAAGC,KAAK,IAAK;MAACC,KAAK,CAACD,KAAK,CAAC;IAAA;EACnC,CAAC,CAAC;AAAA;AAACM,GAAA,CAXaD,YAAY;EAAA,QAC1B5B,QAAQ;AAAA;AAUP;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAyB,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}