{"ast":null,"code":"const getInputNumbersValue = function (input) {\n  // Return stripped input value — just numbers\n  return input.value.replace(/\\D/g, '');\n};\nexport const onPhonePaste = function (e) {\n  const input = e.target,\n    inputNumbersValue = getInputNumbersValue(input);\n  const pasted = e.clipboardData || window.clipboardData;\n  if (pasted) {\n    const pastedText = pasted.getData('Text');\n    if (/\\D/g.test(pastedText)) {\n      // Attempt to paste non-numeric symbol — remove all non-numeric symbols,\n      // formatting will be in onPhoneInput handler\n      input.value = inputNumbersValue;\n    }\n  }\n};\nexport const onPhoneInput = function (e) {\n  let input = e.target,\n    inputNumbersValue = getInputNumbersValue(input),\n    selectionStart = input.selectionStart,\n    formattedInputValue = '';\n  if (!inputNumbersValue) {\n    return input.value = '';\n  }\n  if (input.value.length !== selectionStart) {\n    // Editing in the middle of input, not last symbol\n    if (e.data && /\\D/g.test(e.data)) {\n      // Attempt to input non-numeric symbol\n      input.value = inputNumbersValue;\n    }\n    return;\n  }\n  let firstSymbols = '+7';\n  if (inputNumbersValue[0] === '9') firstSymbols = '+79';\n  formattedInputValue = input.value = firstSymbols;\n  if (inputNumbersValue.length > 1) {\n    formattedInputValue += inputNumbersValue.substring(1, 4);\n  }\n  if (inputNumbersValue.length >= 5) {\n    formattedInputValue += inputNumbersValue.substring(4, 7);\n  }\n  if (inputNumbersValue.length >= 8) {\n    formattedInputValue += inputNumbersValue.substring(7, 9);\n  }\n  if (inputNumbersValue.length >= 10) {\n    formattedInputValue += inputNumbersValue.substring(9, 11);\n  }\n  input.value = formattedInputValue;\n};\nexport const onPhoneKeyDown = function (e) {\n  // Clear input after remove last symbol\n  const inputValue = e.target.value.replace(/\\D/g, '');\n  if (e.keyCode === 8 && inputValue.length === 1) {\n    e.target.value = '';\n  }\n};","map":{"version":3,"names":["getInputNumbersValue","input","value","replace","onPhonePaste","e","target","inputNumbersValue","pasted","clipboardData","window","pastedText","getData","test","onPhoneInput","selectionStart","formattedInputValue","length","data","firstSymbols","substring","onPhoneKeyDown","inputValue","keyCode"],"sources":["/Users/admin/Desktop/projects/wetop/taxi_oz/frontend/src/helpers/phoneMask.js"],"sourcesContent":["const getInputNumbersValue = function (input) {\n  // Return stripped input value — just numbers\n  return input.value.replace(/\\D/g, '');\n};\n\nexport const onPhonePaste = function (e) {\n  const input = e.target,\n    inputNumbersValue = getInputNumbersValue(input);\n  const pasted = e.clipboardData || window.clipboardData;\n  if (pasted) {\n    const pastedText = pasted.getData('Text');\n    if (/\\D/g.test(pastedText)) {\n      // Attempt to paste non-numeric symbol — remove all non-numeric symbols,\n      // formatting will be in onPhoneInput handler\n      input.value = inputNumbersValue;\n    }\n  }\n};\n\nexport const onPhoneInput = function (e) {\n  let input = e.target,\n    inputNumbersValue = getInputNumbersValue(input),\n    selectionStart = input.selectionStart,\n    formattedInputValue = '';\n\n  if (!inputNumbersValue) {\n    return (input.value = '');\n  }\n\n  if (input.value.length !== selectionStart) {\n    // Editing in the middle of input, not last symbol\n    if (e.data && /\\D/g.test(e.data)) {\n      // Attempt to input non-numeric symbol\n      input.value = inputNumbersValue;\n    }\n    return;\n  }\n\n  let firstSymbols = '+7';\n  if (inputNumbersValue[0] === '9') firstSymbols = '+79';\n\n  formattedInputValue = input.value = firstSymbols;\n  if (inputNumbersValue.length > 1) {\n    formattedInputValue += inputNumbersValue.substring(1, 4);\n  }\n  if (inputNumbersValue.length >= 5) {\n    formattedInputValue += inputNumbersValue.substring(4, 7);\n  }\n  if (inputNumbersValue.length >= 8) {\n    formattedInputValue += inputNumbersValue.substring(7, 9);\n  }\n  if (inputNumbersValue.length >= 10) {\n    formattedInputValue += inputNumbersValue.substring(9, 11);\n  }\n\n  input.value = formattedInputValue;\n};\n\nexport const onPhoneKeyDown = function (e) {\n  // Clear input after remove last symbol\n  const inputValue = e.target.value.replace(/\\D/g, '');\n  if (e.keyCode === 8 && inputValue.length === 1) {\n    e.target.value = '';\n  }\n};\n"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAC5C;EACA,OAAOA,KAAK,CAACC,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AACvC,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,SAAAA,CAAUC,CAAC,EAAE;EACvC,MAAMJ,KAAK,GAAGI,CAAC,CAACC,MAAM;IACpBC,iBAAiB,GAAGP,oBAAoB,CAACC,KAAK,CAAC;EACjD,MAAMO,MAAM,GAAGH,CAAC,CAACI,aAAa,IAAIC,MAAM,CAACD,aAAa;EACtD,IAAID,MAAM,EAAE;IACV,MAAMG,UAAU,GAAGH,MAAM,CAACI,OAAO,CAAC,MAAM,CAAC;IACzC,IAAI,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC,EAAE;MAC1B;MACA;MACAV,KAAK,CAACC,KAAK,GAAGK,iBAAiB;IACjC;EACF;AACF,CAAC;AAED,OAAO,MAAMO,YAAY,GAAG,SAAAA,CAAUT,CAAC,EAAE;EACvC,IAAIJ,KAAK,GAAGI,CAAC,CAACC,MAAM;IAClBC,iBAAiB,GAAGP,oBAAoB,CAACC,KAAK,CAAC;IAC/Cc,cAAc,GAAGd,KAAK,CAACc,cAAc;IACrCC,mBAAmB,GAAG,EAAE;EAE1B,IAAI,CAACT,iBAAiB,EAAE;IACtB,OAAQN,KAAK,CAACC,KAAK,GAAG,EAAE;EAC1B;EAEA,IAAID,KAAK,CAACC,KAAK,CAACe,MAAM,KAAKF,cAAc,EAAE;IACzC;IACA,IAAIV,CAAC,CAACa,IAAI,IAAI,KAAK,CAACL,IAAI,CAACR,CAAC,CAACa,IAAI,CAAC,EAAE;MAChC;MACAjB,KAAK,CAACC,KAAK,GAAGK,iBAAiB;IACjC;IACA;EACF;EAEA,IAAIY,YAAY,GAAG,IAAI;EACvB,IAAIZ,iBAAiB,CAAC,CAAC,CAAC,KAAK,GAAG,EAAEY,YAAY,GAAG,KAAK;EAEtDH,mBAAmB,GAAGf,KAAK,CAACC,KAAK,GAAGiB,YAAY;EAChD,IAAIZ,iBAAiB,CAACU,MAAM,GAAG,CAAC,EAAE;IAChCD,mBAAmB,IAAIT,iBAAiB,CAACa,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D;EACA,IAAIb,iBAAiB,CAACU,MAAM,IAAI,CAAC,EAAE;IACjCD,mBAAmB,IAAIT,iBAAiB,CAACa,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D;EACA,IAAIb,iBAAiB,CAACU,MAAM,IAAI,CAAC,EAAE;IACjCD,mBAAmB,IAAIT,iBAAiB,CAACa,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAC1D;EACA,IAAIb,iBAAiB,CAACU,MAAM,IAAI,EAAE,EAAE;IAClCD,mBAAmB,IAAIT,iBAAiB,CAACa,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;EAC3D;EAEAnB,KAAK,CAACC,KAAK,GAAGc,mBAAmB;AACnC,CAAC;AAED,OAAO,MAAMK,cAAc,GAAG,SAAAA,CAAUhB,CAAC,EAAE;EACzC;EACA,MAAMiB,UAAU,GAAGjB,CAAC,CAACC,MAAM,CAACJ,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EACpD,IAAIE,CAAC,CAACkB,OAAO,KAAK,CAAC,IAAID,UAAU,CAACL,MAAM,KAAK,CAAC,EAAE;IAC9CZ,CAAC,CAACC,MAAM,CAACJ,KAAK,GAAG,EAAE;EACrB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}