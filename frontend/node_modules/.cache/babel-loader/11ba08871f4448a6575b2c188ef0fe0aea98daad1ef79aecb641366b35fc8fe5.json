{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Dispatcher/DispatcherContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { QueryCars, QueryNewOrders } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  newOrders: [],\n  isLoading: true,\n  carsList: [],\n  isLoadingCars: true\n};\nconst Context = /*#__PURE__*/createContext(initialValue);\nexport const DispatcherProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const {\n    data: newOrders = [],\n    isLoading = true\n  } = QueryNewOrders(3000);\n  const {\n    data: carsList,\n    isLoading: isLoadingCars = true\n  } = QueryCars(5000);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      newOrders,\n      isLoading,\n      carsList,\n      isLoadingCars\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = DispatcherProvider;\nexport const useDispatcherContext = () => {\n  _s();\n  const context = useContext(Context);\n  if (!context) {\n    throw Error('No Dispatcher context found.');\n  }\n  return context;\n};\n_s(useDispatcherContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DispatcherProvider\");","map":{"version":3,"names":["React","createContext","useContext","QueryCars","QueryNewOrders","jsxDEV","_jsxDEV","initialValue","newOrders","isLoading","carsList","isLoadingCars","Context","DispatcherProvider","_ref","children","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDispatcherContext","_s","context","Error","$RefreshReg$"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/pages/Dispatcher/DispatcherContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react'\nimport {QueryCars, QueryNewOrders} from '../../services/api';\n\n\nconst initialValue = {\n  newOrders: [],\n  isLoading: true,\n  carsList: [],\n  isLoadingCars: true\n}\n\nconst Context = createContext(initialValue)\n\nexport const DispatcherProvider = ({ children }) => {\n\n  const {data: newOrders = [], isLoading = true} = QueryNewOrders (3000);\n\n  const {data: carsList, isLoading: isLoadingCars = true} = QueryCars (5000);\n\n  return (\n    <Context.Provider value={{ newOrders, isLoading, carsList, isLoadingCars }}>{children}</Context.Provider>\n  )\n}\n\nexport const useDispatcherContext = () => {\n  const context = useContext(Context)\n\n  if (!context) {\n    throw Error('No Dispatcher context found.')\n  }\n\n  return context\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,SAAQC,SAAS,EAAEC,cAAc,QAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7D,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,IAAI;EACfC,QAAQ,EAAE,EAAE;EACZC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,OAAO,gBAAGX,aAAa,CAACM,YAAY,CAAC;AAE3C,OAAO,MAAMM,kBAAkB,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EAE7C,MAAM;IAACE,IAAI,EAAER,SAAS,GAAG,EAAE;IAAEC,SAAS,GAAG;EAAI,CAAC,GAAGL,cAAc,CAAE,IAAI,CAAC;EAEtE,MAAM;IAACY,IAAI,EAAEN,QAAQ;IAAED,SAAS,EAAEE,aAAa,GAAG;EAAI,CAAC,GAAGR,SAAS,CAAE,IAAI,CAAC;EAE1E,oBACEG,OAAA,CAACM,OAAO,CAACK,QAAQ;IAACC,KAAK,EAAE;MAAEV,SAAS;MAAEC,SAAS;MAAEC,QAAQ;MAAEC;IAAc,CAAE;IAAAI,QAAA,EAAEA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAmB,CAAC;AAE7G,CAAC;AAAAC,EAAA,GATYV,kBAAkB;AAW/B,OAAO,MAAMW,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAMC,OAAO,GAAGxB,UAAU,CAACU,OAAO,CAAC;EAEnC,IAAI,CAACc,OAAO,EAAE;IACZ,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC7C;EAEA,OAAOD,OAAO;AAChB,CAAC;AAAAD,EAAA,CARYD,oBAAoB;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}