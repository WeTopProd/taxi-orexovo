{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useQuery } from '@tanstack/react-query';\nimport { $api, HOST } from './api';\nconst BASE_URL_DRIVERS = `/users/`;\nconst BASE_URL_TAKE_ORDER = `/takeorder/`;\nconst BASE_URL_DRIVERS_W_HOST = `${HOST}/users/`;\nexport const submitAddCar = data => axios.post(BASE_URL_DRIVERS_W_HOST, data);\nexport const fetchCars = () => axios.get(BASE_URL_DRIVERS_W_HOST).then(response => response === null || response === void 0 ? void 0 : response.data);\nexport const QueryCars = time => {\n  _s();\n  return useQuery({\n    queryFn: () => fetchCars(),\n    queryKey: ['cars'],\n    refetchInterval: time,\n    retry: 5,\n    onError: error => {\n      alert(error);\n    }\n  });\n};\n_s(QueryCars, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n_c = QueryCars;\nexport const getDriverInfoByToken = () => $api.get(`${BASE_URL_DRIVERS}me/`);\nexport const changeDriverDataQuery = (data, carId) => $api.patch(BASE_URL_DRIVERS + `${carId}/`, data);\nexport const takeNewOrder = orderId => $api.post(BASE_URL_TAKE_ORDER + `${orderId}/`);\nvar _c;\n$RefreshReg$(_c, \"QueryCars\");","map":{"version":3,"names":["axios","useQuery","$api","HOST","BASE_URL_DRIVERS","BASE_URL_TAKE_ORDER","BASE_URL_DRIVERS_W_HOST","submitAddCar","data","post","fetchCars","get","then","response","QueryCars","time","_s","queryFn","queryKey","refetchInterval","retry","onError","error","alert","_c","getDriverInfoByToken","changeDriverDataQuery","carId","patch","takeNewOrder","orderId","$RefreshReg$"],"sources":["/Users/admin/Desktop/projects/wetop/taxi/frontend/src/services/userService.js"],"sourcesContent":["import axios from 'axios';\nimport {useQuery} from '@tanstack/react-query';\nimport {$api, HOST} from './api';\n\nconst BASE_URL_DRIVERS = `/users/`;\nconst BASE_URL_TAKE_ORDER = `/takeorder/`;\nconst BASE_URL_DRIVERS_W_HOST = `${HOST}/users/`;\n\nexport const submitAddCar = (data) => axios.post(BASE_URL_DRIVERS_W_HOST, data);\n\nexport const fetchCars = () => axios.get(BASE_URL_DRIVERS_W_HOST)\n    .then((response) => response?.data);\n\nexport const QueryCars = (time) => useQuery({\n  queryFn: () => fetchCars(),\n  queryKey: ['cars'],\n  refetchInterval: time,\n  retry: 5,\n  onError: (error) => {\n    alert(error);\n  }\n});\n\nexport const getDriverInfoByToken = () => $api.get(`${BASE_URL_DRIVERS}me/`);\nexport const changeDriverDataQuery = (data, carId) => $api.patch(BASE_URL_DRIVERS + `${carId}/`, data);\nexport const takeNewOrder = (orderId) => $api.post(BASE_URL_TAKE_ORDER + `${orderId}/`);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,uBAAuB;AAC9C,SAAQC,IAAI,EAAEC,IAAI,QAAO,OAAO;AAEhC,MAAMC,gBAAgB,GAAI,SAAQ;AAClC,MAAMC,mBAAmB,GAAI,aAAY;AACzC,MAAMC,uBAAuB,GAAI,GAAEH,IAAK,SAAQ;AAEhD,OAAO,MAAMI,YAAY,GAAIC,IAAI,IAAKR,KAAK,CAACS,IAAI,CAACH,uBAAuB,EAAEE,IAAI,CAAC;AAE/E,OAAO,MAAME,SAAS,GAAGA,CAAA,KAAMV,KAAK,CAACW,GAAG,CAACL,uBAAuB,CAAC,CAC5DM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEL,IAAI,CAAC;AAEvC,OAAO,MAAMM,SAAS,GAAIC,IAAI;EAAAC,EAAA;EAAA,OAAKf,QAAQ,CAAC;IAC1CgB,OAAO,EAAEA,CAAA,KAAMP,SAAS,CAAC,CAAC;IAC1BQ,QAAQ,EAAE,CAAC,MAAM,CAAC;IAClBC,eAAe,EAAEJ,IAAI;IACrBK,KAAK,EAAE,CAAC;IACRC,OAAO,EAAGC,KAAK,IAAK;MAClBC,KAAK,CAACD,KAAK,CAAC;IACd;EACF,CAAC,CAAC;AAAA;AAACN,EAAA,CARUF,SAAS;EAAA,QAAab,QAAQ;AAAA;AAAAuB,EAAA,GAA9BV,SAAS;AAUtB,OAAO,MAAMW,oBAAoB,GAAGA,CAAA,KAAMvB,IAAI,CAACS,GAAG,CAAE,GAAEP,gBAAiB,KAAI,CAAC;AAC5E,OAAO,MAAMsB,qBAAqB,GAAGA,CAAClB,IAAI,EAAEmB,KAAK,KAAKzB,IAAI,CAAC0B,KAAK,CAACxB,gBAAgB,GAAI,GAAEuB,KAAM,GAAE,EAAEnB,IAAI,CAAC;AACtG,OAAO,MAAMqB,YAAY,GAAIC,OAAO,IAAK5B,IAAI,CAACO,IAAI,CAACJ,mBAAmB,GAAI,GAAEyB,OAAQ,GAAE,CAAC;AAAC,IAAAN,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}